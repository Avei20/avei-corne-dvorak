/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV 1
#define SYM 2
#define BT 3

// TAP_DANCE settings
// could add a define for the tapping ms here


// MACROS to make the the code easier to read
#define TD_TAB &td0
#define TD_CAPLOCK &td1
#define TD_SPC &td2
#define TD_SLSH &td3
#define TD_QUOTE &td4
#define TD_EQL &td5
#define TD_BSLS &td6
#define TD_MINUS &td7
#define TD_SCLN &td8
#define TD_COMM &td9
#define TD_DOT &td10
#define TD_BACKF &td11
#define TD_ALT &td12
#define TD_ARR &td13

/ {


// BEHAVIOURS
// TAP DANCES: 
// put the &td0 part in the keymap part 
// TD_TAB &td0 TAB ESC 
// TD_CAPLOCK &td1 LSHIFT CAPSLOCK 
// TD_SLSH &td3 SLash qmark
// TD_QUOTE &td4 quote double_quote 
// TD_EQL &td5 equal plus
// TD_BSLS &td6 backslash pipe 
// TD_MINUS &td7 minus underscore
// TD_SCLN &td8 semicolon colon 
// TD_COMM &td9 comma less than 
// TD_DOT &td10 period greater_than
// TD_BACKF &td11 grave tilde 
// TD_ALT &td12 lalt gui 
// TD_ARR &td13 q at@ 
// TD_SPC &td2 Space enter 

    behaviors{  
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0"; 
            #binding-cells = <0>; 
            tapping-term-ms = <200>; 
            bindings = <&kp TAB>, <&kp ESC>;

            }; 
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1"; 
            #binding-cells = <0>; 
            tapping-term-ms = <200>; 
            bindings = <&kp LSHIFT>, <&kp CAPSLOCK>;
            }; 
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2"; 
            #binding-cells = <0>; 
            tapping-term-ms = <200>; 
            bindings = <&kp SPACE>, <&kp ENTER>;
            }; 
        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3"; 
            #binding-cells = <0>; 
            tapping-term-ms = <200>; 
            bindings = <&kp SLASH>, <&kp QMARK>;
            }; 
        td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_4"; 
            #binding-cells = <0>; 
            tapping-term-ms = <200>; 
            bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>;
            }; 
        td5: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_5"; 
            #binding-cells = <0>; 
            tapping-term-ms = <200>; 
            bindings = <&kp EQUAL>, <&kp PLUS>;
            }; 
        td6: tap_dance_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_6"; 
            #binding-cells = <0>; 
            tapping-term-ms = <200>; 
            bindings = <&kp BACKSLASH>, <&kp PIPE>;
            }; 
        td7: tap_dance_7 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_7"; 
            #binding-cells = <0>; 
            tapping-term-ms = <200>; 
            bindings = <&kp MINUS>, <&kp UNDERSCORE>;
            }; 
        td7: tap_dance_7 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_7"; 
            #binding-cells = <0>; 
            tapping-term-ms = <200>; 
            bindings = <&kp MINUS>, <&kp UNDERSCORE>;
            }; 
        td8: tap_dance_8 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_8"; 
            #binding-cells = <0>; 
            tapping-term-ms = <200>; 
            bindings = <&kp SEMICOLON>, <&kp COLON>;
            }; 
        td9: tap_dance_9 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_9"; 
            #binding-cells = <0>; 
            tapping-term-ms = <200>; 
            bindings = <&kp COMMA>, <&kp LESS_THAN>;
            }; 
        td10: tap_dance_10 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_10"; 
            #binding-cells = <0>; 
            tapping-term-ms = <200>; 
            bindings = <&kp PERIOD>, <&kp GREATER_THAN>;
            }; 
        td11: tap_dance_11 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_11"; 
            #binding-cells = <0>; 
            tapping-term-ms = <200>; 
            bindings = <&kp GRAVE>, <&kp TILDE>;
            };            

        td12: tap_dance_12 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_12"; 
            #binding-cells = <0>; 
            tapping-term-ms = <200>; 
            bindings = <&kp LALT>, <&kp GUI>;
            };
        td13: tap_dance_13 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_13"; 
            #binding-cells = <0>; 
            tapping-term-ms = <200>; 
            bindings = <&kp Q>, <&kp AT>;
            };
    };

    macros {

        discord_mute: discord_mute{
            label = "MC_discord_mute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp F13>;
        };
        discord_deaf: discord_deaf{
            label = "MC_discord_deaf";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp F14>;
        };
    }; 

    // LAYERS
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB:ESC | ;:':' | ,:< | .:> |  P  |  Y  |        | F  |  G   |  C  |  R  |  L  | BKSP |
// | CTRL     |  A  |  O  |  E  |  U  |  I  |           |  D  |  H   |  T  |  N  |  S  |  DEL   |
// | LSFT:CAP |':"  |  q:@| J   | K   |  X  |          |  B  |  M   |  W  |  V  |  /  | TAB  |
//                            | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   TD_TAB     TD_SCLN  TD_COMM TD_DOT &kp P &kp Y                   &kp F &kp G  &kp C     &kp R   &kp L    &kp BSPC
   &kp LCTRL  &kp A    &kp O   &kp E  &kp U &kp I                   &kp D &kp H  &kp T     &kp N   &kp S    &kp DEL
   TD_CAPLOCK TD_QUOTE TD_ARR  &kp J  &kp K &kp X                   &kp B &kp M  &kp W     &kp V   &kp Z    &kp TAB
                             TD_ALT  &mo 1 TD_SPC                   TD_SPC &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC   |  7   |  5  |  3  |  1  |  9  |            |  0  |  2  |  4  |  6  |  8  |      |
// | F11    |  F1  |  F2 |  F3 |  F4 |  F5 |            | LFT | DWN |  UP | RGT |     |      |
// | SHFT   |  F6  |  F7 |  F8 |  F9 |  F10|            |HOME | PGDN| PGUP| END |     |      |
//                              |   |   |   |         |   |    |   |
                        bindings = <
   &kp ESC    &kp N7    &kp N5  &kp N3  &kp N1  &kp N9                      &kp N0   &kp N2   &kp N4 &kp N6 &kp N8 &trans
   &kp F11    &kp F1    &kp F2  &kp F3  &kp F4  &kp F5                      &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10                     &kp HOME   &kp PG_DN   &kp PG_UP &kp END    &trans &trans
                          	       &trans &trans &trans                     &trans  &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL  |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  ESC  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp DEL    
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

// BT functions, media, and discord hotkeys (should add teams as well) 
                bt_media_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |     |     |     |     |     |   |  DDEAF  |     |     |     |     | DMUTE  |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT     | PRV |  Play/P | NXT |     |      |
// | SHFT |     |     |     |     |     |   | MUTE    | VOL-| VOL+|  |     |      |
//                    | GUI |     | SPC |   | ENT     |     | ALT |
                        bindings = <
   &kp ESC    &trans       &trans       &trans       &trans       &trans         &discord_deaf   &trans   &trans &trans    &trans &discord_mute
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp K_PREV &kp K_PP &kp K_NEXT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &kp K_MUTE   &kp K_VOL_DN   &kp K_VOL_UP &trans    &trans &trans
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };
        };
};
